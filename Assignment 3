import pandas as pd
import numpy as np

# Load energy file, skip header; exclude footer and unnecessary columns; rename columns
energy = (pd.read_excel('assets/Energy Indicators.xls',skiprows=17) 
         .loc[:(244-18),['Unnamed: 1','Petajoules','Gigajoules','%']]
         .rename(columns={'Unnamed: 1':'Country', 'Petajoules':'Energy Supply',
                          'Gigajoules':'Energy Supply per Capita','%':'% Renewable'})
          # Replace missing data with NaN (done before the converting step, or '...' would also be multiplied by 1000000)
         .replace(to_replace='...', value=np.nan))
# Convert Energy Supply to gigajoules
energy['Energy Supply'] *=  1000000
# Rename countries mentioned
energy['Country'] = energy['Country'].replace({"Republic of Korea": "South Korea",
                           "United States of America": "United States",
                           "United Kingdom of Great Britain and Northern Ireland": "United Kingdom",
                           "China, Hong Kong Special Administrative Region": "Hong Kong"})
# Remove "()" in countries
energy['Country'] = energy['Country'].replace(to_replace=' \(.+\)',value='', regex=True)

# Load GDP file, skip header; drop unnecessary columns
GDP = pd.read_csv('assets/world_bank.csv',skiprows=4).drop(['Indicator Name','Indicator Code','Country Code'],axis=1)
# Rename countries mentioned
GDP['Country Name'] = GDP['Country Name'].replace({"Korea, Rep.": "South Korea", 
                                                   "Iran, Islamic Rep.": "Iran",
                                                   "Hong Kong SAR, China": "Hong Kong"})
# Load final file
ScimEn = pd.read_excel('assets/scimagojr-3.xlsx')

# Merge ScimEn(Rank 1-15) with energy first
ScimEn_energy = pd.merge(ScimEn[ScimEn['Rank'].isin(range(1,16))], energy, on='Country')

# Merge above df with GDP(2006-2015); set 'Country' as index, drop duplicate column 'Country Name'
yrs = [str(yr) for yr in range(2006,2016)]
df_merge = (pd.merge(ScimEn_energy, GDP[['Country Name']+yrs], left_on='Country', right_on='Country Name').set_index('Country')
 .drop('Country Name', axis = 1))
df_merge
